name: github-actions
on: [push]
jobs:
    Build-Test-Release:
        runs-on: ubuntu-latest
        env:
            BUILD_IMAGE: bedasoftware/sdc-ide:master
            CACHE_IMAGE: bedasoftware/sdc-ide:latest
            AIDBOX_LICENSE_KEY_TESTS: ${{ secrets.AIDBOX_LICENSE_KEY_TESTS }}
            AIDBOX_LICENSE_ID_TESTS: ${{ secrets.AIDBOX_LICENSE_ID_TESTS }}
            BASE_URL: https://aidbox.sdc.beda.software
        steps:
            - uses: actions/checkout@v2
            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1
            - run: docker run --rm --privileged tonistiigi/binfmt --install all
            - run: docker pull ${{ env.CACHE_IMAGE }} || true
            - run: >-
                  docker buildx build --platform linux/arm64,linux/amd64
                  --cache-from ${{ env.CACHE_IMAGE }}
                  --build-arg TIER=production
                  --build-arg BASE_URL=${{ env.BASE_URL }}
                  -t ${{ env.BUILD_IMAGE }} -t ${{ env.CACHE_IMAGE }} .
            - run: docker run --rm ${{ env.BUILD_IMAGE }} yarn typecheck
            - run: ./run_test.sh
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_TOKEN }}
            - run: >-
                  docker buildx build --platform linux/arm64,linux/amd64
                  --push
                  --cache-from ${{ env.CACHE_IMAGE }}
                  --build-arg TIER=${{ env.BRANCH_NAME == 'master' && 'production' || 'develop' }}
                  --build-arg BASE_URL=${{ env.BASE_URL }}
                  -t ${{ env.BUILD_IMAGE }} -t ${{ env.CACHE_IMAGE }} .
    Deploy:
        needs: Test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master'
        steps:
            - uses: actions/checkout@v2
            - name: Deploy to Server
              uses: easingthemes/ssh-deploy@v2.1.1
              env:
                  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
                  ARGS: '-rltgoDzvO'
                  SOURCE: './examples/'
                  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
                  REMOTE_USER: ${{ secrets.REMOTE_USER }}
                  TARGET: '/root/sdc-demo'
            - name: Restart
              uses: appleboy/ssh-action@master
              env:
                  ENV_FILE: ${{ secrets.ENV_FILE }}
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: 22
                  envs: ENV_FILE
                  script_stop: true
                  script: |
                      cd /root/sdc-demo
                      echo -n $ENV_FILE|base64 -d > .env
                      docker compose -f docker-compose.production.yaml pull
                      docker compose -f docker-compose.production.yaml up -d
                      echo Current branch is ${{ github.ref }}
